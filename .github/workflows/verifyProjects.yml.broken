# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Book Sample Code Projects by Chapter

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  step2:
    env:
      PROJECT: step2
    runs-on: ubuntu-latest

    steps:
      - uses: aquariuslt/node-browsers-github-actions@v1.0.0
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm ci

      - run: npx ng build --configuration production --project $PROJECT

      - run: npx ng test --watch=false --project $PROJECT
      - run: npx ng e2e $PROJECT
  step3:
    env:
      PROJECT: step3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm ci

      - run: npx ng build --configuration production --project $PROJECT
      # - run: npx ng test --configuration=ci --project $PROJECT #Intentionally failing tests
      - run: npx ng e2e --configuration=ci $PROJECT
  step4:
    env:
      PROJECT: step4
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm ci

      - run: npx ng build --configuration production --project $PROJECT
      - run: npx ng test --configuration=ci --project $PROJECT
      - run: npx ng e2e --configuration=ci $PROJECT
  step5:
    env:
      PROJECT: step5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm ci

      - run: npx ng build --configuration production --project $PROJECT
      - run: npx ng test --configuration=ci --project $PROJECT
      - run: npx ng e2e --configuration=ci $PROJECT
  step6:
    env:
      PROJECT: step6
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm ci

      - run: npx ng build --configuration production --project $PROJECT
      - run: npx ng test --configuration=ci --project $PROJECT
      - run: npx ng e2e --configuration=ci $PROJECT
step12:
  env:
    PROJECT: step12
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v2
    - name: Cache node modules
      uses: actions/cache@v1
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - run: npm ci
    - run: npx ng build --configuration production --project $PROJECT
    - run: npx ng test --configuration=ci --project $PROJECT
    - run: npx ng e2e --configuration=ci $PROJECT
