# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Verify Book Sample Code by Chapter

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Cache node modules
      uses: actions/cache@v1
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
          
    - run: npm ci         
  ch2:
    env: 
      PROJECT: ch2
    needs: setup
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/checkout@v2
    
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm ci    
        
      - run: npx ng build --prod --project $PROJECT
      - run: npx ng test --watch=false --project $PROJECT
      - run: npm run e2e $PROJECT
  ch3:
    env: 
      PROJECT: ch3
    needs: setup
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/checkout@v2
    
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm ci   
          
      - run: npx ng build --prod --project $PROJECT
      # - run: npx ng test --watch=false --project $PROJECT #Intentionally failing tests
      - run: npm run e2e $PROJECT
  ch4:
    env: 
      PROJECT: ch4
    needs: setup
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/checkout@v2
    
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm ci   
          
      - run: npx ng build --prod --project $PROJECT
      - run: npx ng test --watch=false --project $PROJECT
      - run: npm run e2e $PROJECT
  ch5:
    env: 
      PROJECT: ch5
    needs: setup
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/checkout@v2
    
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm ci   
          
      - run: npx ng build --prod --project $PROJECT
      - run: npx ng test --watch=false --project $PROJECT
      - run: npm run e2e $PROJECT
  ch6:
    env: 
      PROJECT: ch6
    needs: setup
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/checkout@v2
    
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm ci   
          
      - run: npx ng build --prod --project $PROJECT
      - run: npx ng test --watch=false --project $PROJECT
      - run: npm run e2e $PROJECT
